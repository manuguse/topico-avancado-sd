import struct

#entry = '0000'
#missing = 4 - len(entry)
#entry = "0"*missing + entry

entries = [
    '0001', '0010', '0011', '0100', '0101', '0110', '0111',
    '1000', '1001', '1010', '1011', '1100', '1101', '1110', '1111',
]

def mult(x, y):
    return str(int(x)*int(y))

def mult_not(x,y):
    notY = {0:1, 1:0}[int(y)]
    return str(int(x)*notY)

def calculate_area(entry):

    answer = bin(int(int(entry, 2)**2 * 3.125))[2:]
    expected = bin(int(int(entry, 2)**2 * 3.1415))[2:]

    a = entry[3]
    b = entry[2]
    c = entry[1]
    d = entry[0]

    cd = mult(c,d)
    bd = mult(b,d)
    ad = mult(a,d)
    bc = mult(b,c)
    ac = mult(a,c)
    ab = mult(a,b)
    
    Ncd = mult_not(d,c)
    Nbc = mult_not(c,b)
    Nad = mult_not(d,a)
    Nab = mult_not(b,a)
    Nac = mult_not(c,a)
    Nbd = mult_not(d,b)
    
    aNd = mult(a,d)
    

    #v1 = cd + bd + bd + ad + cd + bd + ad + ac + ab + '0' + a
    #v2 = d + cd + ad + bc + ac + ab + bc + a + b + "00"
    #v3 = "0" + d + bc + ac + ab + b + c + "0000"
    #v4 = "00" + c + c + b + '0' + a + "0000"
    #v5 = "0000" + d + "000000"
    
    v1 = cd + Ncd + bd + cd + Ncd + ad + aNd + ac + ab + '0' + a
    v2 = d + cd + ad + bc + ac + ab + bc + a + b + "00"
    v3 = "0" + d + bc + ac + ab + b + c + "0000"
    v4 = "00" + c + c + b + '0' + a + "0000"
    v5 = "0000" + d + "000000"

    # print(f'resposta esperada:   {answer}')

    sum = bin(int(v1, 2) + int(v2, 2) + int(v3, 2) + int(v4, 2) + int(v5, 2))[2:-3]

    print(f'resposta esperada: {expected}')
    print(f'resposta obtida:   {sum}')
    print('certo') if expected == sum else print('errado')

    #print(f'diferenca: {(int(expected, 2) - int(sum, 2))}')
    
for entry in entries: 
    calculate_area(entry)
    print()
